name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test-go:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'
    
    - name: Run Go tests
      working-directory: ./go-api
      run: |
        go mod download
        go test -v -race -coverprofile=coverage.out
    
    - name: Upload coverage
      uses: codecov/codecov-action@v3
      with:
        files: ./go-api/coverage.out
        flags: go
        name: go-coverage

  test-node:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
    
    - name: Install dependencies
      working-directory: ./node-api
      run: npm ci
    
    - name: Run tests
      working-directory: ./node-api
      run: node test.js

  build-docker:
    runs-on: ubuntu-latest
    needs: [test-go, test-node]
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    
    - name: Build Go API image
      uses: docker/build-push-action@v4
      with:
        context: ./go-api
        push: false
        tags: matrix-rotation-go:latest
    
    - name: Build Node API image
      uses: docker/build-push-action@v4
      with:
        context: ./node-api
        push: false
        tags: matrix-rotation-node:latest

  lint:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'
    
    - name: Run golangci-lint
      uses: golangci/golangci-lint-action@v3
      with:
        working-directory: ./go-api
        version: latest
    
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18.x'
    
    - name: Install ESLint
      working-directory: ./node-api
      run: npm install --save-dev eslint
    
    - name: Run ESLint
      working-directory: ./node-api
      run: npx eslint . --max-warnings 0 || true
